{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hpryz\\\\quiz-app\\\\src\\\\components\\\\Quiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Question from './Question';\nimport Result from './Result';\nimport Timer from './Timer';\nimport questions from '../data/questions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TIME_PER_QUESTION = 15; // seconds\n\nconst Quiz = () => {\n  _s();\n  const [current, setCurrent] = useState(0);\n  const [score, setScore] = useState(0);\n  const [finished, setFinished] = useState(false);\n  const nextQuestion = () => current + 1 < questions.length ? setCurrent(current + 1) : setFinished(true);\n  const handleAnswer = selected => {\n    if (selected === questions[current].answer) setScore(s => s + 1);\n    nextQuestion();\n  };\n  const handleExpire = () => nextQuestion();\n  const restart = () => {\n    setCurrent(0);\n    setScore(0);\n    setFinished(false);\n  };\n  if (finished) return /*#__PURE__*/_jsxDEV(Result, {\n    score: score,\n    total: questions.length,\n    onRestart: restart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Timer, {\n      seconds: TIME_PER_QUESTION,\n      onExpire: handleExpire\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Question, {\n      data: questions[current],\n      onAnswer: handleAnswer,\n      qNum: current + 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Quiz, \"Jnzgr0sGQ6VK+QdlSxXyMCOceig=\");\n_c = Quiz;\nexport default Quiz;\nvar _c;\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"names":["React","useState","Question","Result","Timer","questions","jsxDEV","_jsxDEV","Fragment","_Fragment","TIME_PER_QUESTION","Quiz","_s","current","setCurrent","score","setScore","finished","setFinished","nextQuestion","length","handleAnswer","selected","answer","s","handleExpire","restart","total","onRestart","fileName","_jsxFileName","lineNumber","columnNumber","children","seconds","onExpire","data","onAnswer","qNum","_c","$RefreshReg$"],"sources":["C:/Users/hpryz/quiz-app/src/components/Quiz.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Question from './Question';\r\nimport Result from './Result';\r\nimport Timer from './Timer';\r\nimport questions from '../data/questions';\r\n\r\nconst TIME_PER_QUESTION = 15; // seconds\r\n\r\nconst Quiz = () => {\r\n  const [current, setCurrent] = useState(0);\r\n  const [score, setScore] = useState(0);\r\n  const [finished, setFinished] = useState(false);\r\n\r\n  const nextQuestion = () =>\r\n    current + 1 < questions.length\r\n      ? setCurrent(current + 1)\r\n      : setFinished(true);\r\n\r\n  const handleAnswer = selected => {\r\n    if (selected === questions[current].answer) setScore(s => s + 1);\r\n    nextQuestion();\r\n  };\r\n\r\n  const handleExpire = () => nextQuestion();\r\n\r\n  const restart = () => {\r\n    setCurrent(0);\r\n    setScore(0);\r\n    setFinished(false);\r\n  };\r\n\r\n  if (finished)\r\n    return <Result score={score} total={questions.length} onRestart={restart} />;\r\n\r\n  return (\r\n    <>\r\n      <Timer seconds={TIME_PER_QUESTION} onExpire={handleExpire} />\r\n      <Question\r\n        data={questions[current]}\r\n        onAnswer={handleAnswer}\r\n        qNum={current + 1}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Quiz;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,SAAS,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1C,MAAMC,iBAAiB,GAAG,EAAE,CAAC,CAAC;;AAE9B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMkB,YAAY,GAAGA,CAAA,KACnBN,OAAO,GAAG,CAAC,GAAGR,SAAS,CAACe,MAAM,GAC1BN,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC,GACvBK,WAAW,CAAC,IAAI,CAAC;EAEvB,MAAMG,YAAY,GAAGC,QAAQ,IAAI;IAC/B,IAAIA,QAAQ,KAAKjB,SAAS,CAACQ,OAAO,CAAC,CAACU,MAAM,EAAEP,QAAQ,CAACQ,CAAC,IAAIA,CAAC,GAAG,CAAC,CAAC;IAChEL,YAAY,CAAC,CAAC;EAChB,CAAC;EAED,MAAMM,YAAY,GAAGA,CAAA,KAAMN,YAAY,CAAC,CAAC;EAEzC,MAAMO,OAAO,GAAGA,CAAA,KAAM;IACpBZ,UAAU,CAAC,CAAC,CAAC;IACbE,QAAQ,CAAC,CAAC,CAAC;IACXE,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,IAAID,QAAQ,EACV,oBAAOV,OAAA,CAACJ,MAAM;IAACY,KAAK,EAAEA,KAAM;IAACY,KAAK,EAAEtB,SAAS,CAACe,MAAO;IAACQ,SAAS,EAAEF;EAAQ;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EAE9E,oBACEzB,OAAA,CAAAE,SAAA;IAAAwB,QAAA,gBACE1B,OAAA,CAACH,KAAK;MAAC8B,OAAO,EAAExB,iBAAkB;MAACyB,QAAQ,EAAEV;IAAa;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7DzB,OAAA,CAACL,QAAQ;MACPkC,IAAI,EAAE/B,SAAS,CAACQ,OAAO,CAAE;MACzBwB,QAAQ,EAAEhB,YAAa;MACvBiB,IAAI,EAAEzB,OAAO,GAAG;IAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA,eACF,CAAC;AAEP,CAAC;AAACpB,EAAA,CApCID,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAsCV,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}